{"version":3,"file":"static/js/120.8bb42fb5.chunk.js","mappings":"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","sources":["components/MoviesAPI.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'f34ed5891c665d5a7f0c87dfa3d7e171';\n\n//---- Запрос самых популярных фильмов на сегодня ----\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/all/day',\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\n//---- Запрос по поиску кинофильма ----\nexport const fetchMoviesbySearch = async input => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie',\n    {\n      params: {\n        query: input,\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\n//---- Запрос полной информации о фильме ----\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n};\n\n//---- Запрос информации о актёрском составе ----\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\n//---- Запрос обзоров ----\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n","import styled from '@emotion/styled';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  margin-top: 20px;\n  margin-bottom: 40px;\n  justify-content: center;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\n\nimport { LoaderWrapper } from './Loader.styled';\n\nconst Loader = ({ loading }) => {\n  return (\n    <LoaderWrapper>\n      <PropagateLoader loading={loading} color=\"#3f51b5\" size={20} />\n    </LoaderWrapper>\n  );\n};\n\nLoader.propTypes = {\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const MovieSearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  margin: 0 auto;\n  max-width: 900px;\n  justify-content: center;\n  text-align: center;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const MovieSearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const MovieSearchIcon = styled(FcSearch)`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const MovieSearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const MovieItem = styled.li`\n  font-family: 'Segoe UI';\n  display: flex;\n  margin-top: 10px;\n  padding: 2px;\n  font-size: 23px;\n  font-weight: 400;\n\n  :hover,\n  :focus {\n    color: #8f6f06;\n  }\n\n  ::before {\n    content: '🎬';\n    display: flex;\n    align-items: center;\n    margin-right: 5px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport Loader from '../../components/Loader/Loader';\nimport { fetchMoviesbySearch } from '../../components/MoviesAPI';\n\nimport {\n  MovieSearchForm,\n  MovieSearchButton,\n  MovieSearchIcon,\n  MovieSearchInput,\n  MovieItem,\n} from './Movies.styled';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const input = searchParams.get('input') ?? '';\n  const [searchInput, setSearchInput] = useState(input ?? '');\n  const location = useLocation();\n\n  //---- Обновляем input ----\n  function updateInput(event) {\n    setSearchInput(event.currentTarget.value);\n    if (event.currentTarget.value === '') {\n      setSearchParams({});\n      setMovies([]);\n    }\n  }\n\n  //---- Нажимаем поиск ----\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (searchInput.trim() === '') {\n      toast('Enter image name, please!', { icon: '🧐' });\n      return;\n    }\n\n    setSearchParams({ input: searchInput });\n  }\n\n  //---- useEffect для поиска----\n  useEffect(() => {\n    if (input === '') {\n      return;\n    }\n    async function fetchMovies() {\n      try {\n        setLoading(true);\n\n        const searchMovies = await fetchMoviesbySearch(input);\n\n        setMovies(searchMovies.results);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchMovies();\n  }, [input]);\n\n  //----Рендер----\n  return (\n    <>\n      <MovieSearchForm onSubmit={handleSubmit}>\n        <MovieSearchButton type=\"submit\">\n          <MovieSearchIcon />\n        </MovieSearchButton>\n\n        <MovieSearchInput\n          name=\"input\"\n          value={searchInput}\n          onChange={updateInput}\n          type=\"text\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies...\"\n        />\n      </MovieSearchForm>\n\n      {loading && <Loader loading={loading} />}\n      {!loading && movies && input !== '' && (\n        <ul>\n          {movies.map(movie => (\n            <MovieItem key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                <p>{movie.title}</p>\n              </Link>\n            </MovieItem>\n          ))}\n        </ul>\n      )}\n\n      <Toaster position=\"top-right\" />\n    </>\n  );\n}\n"],"names":["KEY","fetchTrendingMovies","axios","params","api_key","response","data","fetchMoviesbySearch","input","query","fetchMovieDetails","id","fetchMovieCast","fetchMovieReviews","LoaderWrapper","styled","loading","color","size","MovieSearchForm","MovieSearchButton","MovieSearchIcon","FcSearch","MovieSearchInput","MovieItem","Movies","useState","movies","setMovies","setLoading","useSearchParams","searchParams","setSearchParams","get","searchInput","setSearchInput","location","useLocation","useEffect","searchMovies","results","console","log","fetchMovies","onSubmit","event","preventDefault","trim","toast","icon","type","name","value","onChange","currentTarget","autocomplete","autoFocus","placeholder","map","movie","to","state","from","title","position"],"sourceRoot":""}