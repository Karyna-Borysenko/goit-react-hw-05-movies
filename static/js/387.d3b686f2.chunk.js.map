{"version":3,"file":"static/js/387.d3b686f2.chunk.js","mappings":"oRAEaA,EAAWC,EAAAA,EAAAA,GAAH,8JAQRC,EAAWD,EAAAA,EAAAA,GAAH,sGAKRE,EAAQF,EAAAA,EAAAA,IAAH,0CAILG,EAAYH,EAAAA,EAAAA,EAAH,kIAQTI,EAAiBJ,EAAAA,EAAAA,EAAH,wJASdK,EAAeL,EAAAA,EAAAA,EAAH,wJ,SCtBV,SAASM,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAcR,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE4BC,EAAAA,EAAAA,IAAeH,GAF3C,OAEUI,EAFV,OAGIL,EAAQK,EAAUN,MAHtB,gDAKIO,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACP,KAGF,8BACmB,IAAhBF,EAAKU,QACJ,SAACnB,EAAD,UACGS,EAAKW,KAAI,SAAAC,GAAK,OACb,UAACnB,EAAD,WACGmB,EAAMC,cACL,gBACEC,IAAG,0CAAqCF,EAAMC,cAC9CE,IAAKH,EAAMI,QAGb,SAACtB,EAAD,CACEoB,IAAI,mFACJC,IAAKH,EAAMI,QAIf,SAACrB,EAAD,UAAYiB,EAAMI,QAClB,SAACpB,EAAD,UAAiBgB,EAAMK,cAdVL,EAAMM,GADR,OAoBjB,SAACrB,EAAD,qGAOP,C,6LC3DKsB,EAAM,mCAGCC,EAAmB,mCAAG,oGACVC,EAAAA,GAAAA,IACrB,gDACA,CACEC,OAAQ,CACNC,QAASJ,KALkB,cAC3BK,EAD2B,yBAS1BA,EAASC,MATiB,2CAAH,qDAanBC,EAAmB,mCAAG,WAAMC,GAAN,uFACVN,EAAAA,GAAAA,IACrB,4CACA,CACEC,OAAQ,CACNM,MAAOD,EACPJ,QAASJ,KANkB,cAC3BK,EAD2B,yBAU1BA,EAASC,MAViB,2CAAH,sDAcnBI,EAAiB,mCAAG,WAAMX,GAAN,uFACRG,EAAAA,GAAAA,IAAA,6CAAgDH,GAAM,CAC3EI,OAAQ,CACNC,QAASJ,KAHkB,cACzBK,EADyB,yBAMxBA,EAASC,MANe,2CAAH,sDAUjBpB,EAAc,mCAAG,WAAMa,GAAN,uFACLG,EAAAA,GAAAA,IAAA,6CACiBH,EADjB,YAErB,CACEI,OAAQ,CACNC,QAASJ,KALa,cACtBK,EADsB,yBASrBA,EAASC,MATY,2CAAH,sDAadK,EAAiB,mCAAG,WAAMZ,GAAN,uFACRG,EAAAA,GAAAA,IAAA,6CACiBH,EADjB,YAErB,CACEI,OAAQ,CACNC,QAASJ,KALgB,cACzBK,EADyB,yBASxBA,EAASC,MATe,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/MoviesAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 250px);\n  gap: 16px;\n  text-align: center;\n  justify-content: center;\n`;\n\nexport const CastItem = styled.li`\n  box-shadow: 0px 0px 2px 3px rgba(26, 79, 72, 0.72);\n  border-radius: 4px;\n`;\n\nexport const Image = styled.img`\n  height: 375px;\n`;\n\nexport const ActorName = styled.p`\n  font-size: 24px;\n  font-weight: 600;\n  color: #0a5c5f;\n  margin-bottom: 5px;\n  text-align: center;\n`;\n\nexport const ActorCharacter = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 5px;\n  color: dimgrey;\n  line-height: 30px;\n  text-align: center;\n`;\n\nexport const Notification = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 5px;\n  color: dimgrey;\n  line-height: 30px;\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMovieCast } from '../../components/MoviesAPI';\n\nimport {\n  CastList,\n  CastItem,\n  Image,\n  ActorName,\n  ActorCharacter,\n  Notification,\n} from '../Cast/Cast.styled';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    async function fetchCast() {\n      try {\n        const movieCast = await fetchMovieCast(moviesId);\n        setCast(movieCast.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchCast();\n  }, [moviesId]);\n\n  return (\n    <>\n      {cast.length !== 0 ? (\n        <CastList>\n          {cast.map(actor => (\n            <CastItem key={actor.id}>\n              {actor.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n                  alt={actor.name}\n                />\n              ) : (\n                <Image\n                  src=\"https://upload.wikimedia.org/wikipedia/commons/4/43/Illustration_of_an_image.png\"\n                  alt={actor.name}\n                />\n              )}\n\n              <ActorName>{actor.name}</ActorName>\n              <ActorCharacter>{actor.character}</ActorCharacter>\n            </CastItem>\n          ))}\n        </CastList>\n      ) : (\n        <Notification>\n          We don't know what the cast is in this movie 😢 Or maybe it's a\n          cartoon...?\n        </Notification>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = 'f34ed5891c665d5a7f0c87dfa3d7e171';\n\n//---- Запрос самых популярных фильмов на сегодня ----\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/all/day',\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\n//---- Запрос по поиску кинофильма ----\nexport const fetchMoviesbySearch = async input => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie',\n    {\n      params: {\n        query: input,\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\n//---- Запрос полной информации о фильме ----\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n};\n\n//---- Запрос информации о актёрском составе ----\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n\n//---- Запрос обзоров ----\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response.data;\n};\n"],"names":["CastList","styled","CastItem","Image","ActorName","ActorCharacter","Notification","Cast","useState","cast","setCast","moviesId","useParams","useEffect","fetchMovieCast","movieCast","console","log","fetchCast","length","map","actor","profile_path","src","alt","name","character","id","KEY","fetchTrendingMovies","axios","params","api_key","response","data","fetchMoviesbySearch","input","query","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}